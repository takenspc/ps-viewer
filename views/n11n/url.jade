include ../shared/nav-local
extends ../layout

mixin formatEntry(engine, entry)
  - var id = utils.getPlatformStatusId(engine, entry.id) 
  li.redirect(id=id)
    span.title= entry.title
    p.explain Plateostatus normalized the specification URL as follows:
    ol.redirect-list
      li
        span.type original
        a(href=entry.url)= entry.url
        div.reason Original URL
      each redirect in data.redirects[entry.url] || []
        li
          span.type= redirect.type
          a(href=redirect.to)= redirect.to
          - var typeMessge = '';
          - if (redirect.type === 'rewrite') { typeMessage = 'Rewrite URL manually: '; }
          - if (redirect.type === 'wd2ed') { typeMessage = 'Switch URL to Editor\'s Draft: '; }
          - if (redirect.type === 'redirect') { typeMessage = 'Follow redirection: '; }
          - var reason = typeMessage + redirect.reason;
          div.reason= reason
    ul.nav-util
      li.link-internal
        - var url = '/status/#' + id;
        a(href=url) View more info of this platform status entry
      li.link-external
        - var statusUrl = utils.getPlatformStatusUrl(engine, entry.id);
        - var statusHost = utils.getHost(statusUrl);
        - var linkText = 'View the platform status entry (' + statusHost + ')';
        a(href=statusUrl)= linkText


mixin formatEngine(engine, entries)
  div.engine
    h5.engine-name(class=engine)= engine
    ul.entry-list
      each entry in entries
        +formatEntry(engine, entry)


mixin formatFragment(url, fragment)
  - var id = url + encodeURIComponent(fragment.fragment);
  - var fragmentText = decodeURIComponent(fragment.fragment || '#');
  div.fragment(id=id)
    h4.fragment-name= fragmentText

    each engine in engines
      - var entries = fragment.engines[engine]
      if entries
        +formatEngine(engine, entries)


mixin formatURL(urlEntry)
  - var specUrl = urlEntry.url
  - var specHost = utils.getHost(specUrl);
  - var id = specUrl || 'about:blank?url';
  - var headingText = specUrl || '(no url was specified)';
  - var linkText = 'View the spec (' + specHost + ')';
  div.url(id=id)
    h3.url-name= headingText
    ul.nav-util
      if specUrl
        li.link-external
          a(href=specUrl)= linkText

    - var fragments = Object.keys(urlEntry.fragments).sort();
    each fragment in fragments
      +formatFragment(specUrl, urlEntry.fragments[fragment])


mixin formatHost(host, urls)
  - var id = host || 'about:blank?host';
  - var headingText = host || '(no host was specified)';
  section.host(id=id)
    h2.host-name= headingText

    each urlEntry in utils.queryUrlEntriesByHost(urls, host)
      +formatURL(urlEntry)

mixin formatEntity(entity, hosts, urls)
  each host in hosts
    +formatHost(host, urls)


mixin formatTOC(entity, hosts)
  each host in hosts
    - var href = '#' + encodeURIComponent(host || 'about:blank?host');
    - var headingText = host || '(no host was specified)';
    li
      a(href=href)= headingText

block content
  +navLocalEngines('/n11n/url/', engines, pageType)
  - var entities = Object.keys(data.entities).sort();
  h1= h1
  p Plateostatus normalizes specification URL of platform status data. This page describes how Plateostatus normalized them.
  +lastUpdated()
  div.note
    h2 Principals of URL normalization
    p Plateostatus normalizes specification URL in accordance with following principles:
    dl
      dt Follow redirection
      dd
        p Once a specification page has moved, the specification page usually redirects to the new page. Plateostatus follows such redirection.
      dt Prefer specification pages over repository
      dd
        p One of objectives of Plateostatus is providing quick access to the platform statuses from specification pages. Thus Plateostatus prefers specification pages over repository (e.g. prefer github.io over github.com, tools.ietf.org over datatracker.ietf.org).
      dt Prefer Editor's Drafts over Working Drafts
      dd
        p Plateostatus aims to make implementations (browsers) information and specification information closer. In general, feedbacks from implementors (browser vendors) and others are firstly reflected to Editor's Draft. Thus Plateostatus assumes that Editor's Draft is closer to implementations (browsers) than Working Draft and others.
  div.toc
    h2 Table of Contents
    ul.toc-list
      each entity in entities
        +formatTOC(entity, data.entities[entity])
  div.note
    h2 Legends
    dl
      dt redirect
      dd
        p Follow redirection
      dt rewrite
      dd
        p Rewrite URL manually based on predefined rules
      dt wd2d
      dd
        p Replace URL of a Working Draft with URL of its Editor's Draft 
  each entity in entities
    +formatEntity(entity, data.entities[entity], data.urls)
